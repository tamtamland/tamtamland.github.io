htmlをWordpressへの実装（簡易版）

1、自身のテーマの作成
    テーマとなるフォルダーの作成
    フォルダー内に、通常のhtmlデータを配置
    フォルダー内の第一階層に
        index.php -> 通常、記事一覧ページのhtmlファイルを選択
        style.css -> 通常のCSSではなく、テーマとして認識させるために 
            *style.css内のコメントとして、Theme Name:テーマの名前を記述
    ダッシュボードのメニュー　外観・テーマで作成したフォルダーがテーマとして認識されているのを確認

2、index.phpの初期設定
    htmlの、</head>の前に -> <?php wp_head(); ?>
    htmlの、</body>の前に -> <?php wp_footer(); ?>
    index.php内の、CSS、画像、JS等へのパスを通す -> <?php echo get_template_directory_uri(); ?>/
    サイトのタイトルに該当するところに -> <?php bloginfo( 'name' ); ?>
    サイトのキャッチフレーズに該当するところに -> <?php bloginfo( 'description' ); ?>
    ホーム（トップ）ページに戻る設定 -> <?php echo esc_url( home_url( '/' )); ?> 

    後に、結構便利な命令文の紹介 -> <?php body_class(); ?> 各ファイル名に合わせて,bodyにそのファイル名に関連した、クラス名が付けられる

    ＊各リンクは全くされていないが、表示としては、この段階で「OK」

3、ダッシュボードの機能拡張 -> functions.php
    function ???_setup() {
	    //呼び出され処理される内容の記述
    }
    add_action( 'after_setup_theme', '???_setup' );

    (例）
        function custom_theme_setup() {

        //タイトルタグを動的に出力
        add_theme_support( 'title-tag' );

        //アイキャッチ画像を有効化
        add_theme_support( 'post-thumbnails' );
        set_post_thumbnail_size( 600, 400, false );

        }

        add_action( 'after_setup_theme', 'custom_theme_setup' );
        //custom_theme_setup の名称は自分で好きなファイル名でOK

4、投稿データのループ（繰り返し）表示
    記事一覧（index.php）の場合、記事内容のhtml領域を下記の命令文で囲む
    (例）
        <?php if ( have_posts() ) : //もし、投稿が1件以上あったら ?>
        <?php while ( have_posts() ) : //投稿の表示条件を満たす間は繰り返す ?>
        <?php the_post(); //データ1件分を取り出して渡す ?>

        //記事内容のhtml領域をここに記述

        <?php endwhile; //投稿ループ終了 ?>
        <!--▼ ページネーション : 開始-->
        <?php the_posts_pagination(); ?>　
        <!--▲ ページネーション : 終了-->
        <?php else: //もし、表示すべき投稿がなかったら ?>
        <p>あてはまる情報はまだありません。</p>
        <?php endif; //条件分岐終了 ?>

    記事内容のhtml領域内に、日付、タイトルなどを表示させる各種命令文
        <?php the_title(); ?>
        //投稿タイトルを表示するため

        <?php the_time( 'Y年n月j日' ); ?>
        //日付を表示するため
        <?php the_time( 'Y-n-j' ); ?>
        //英語？表記みたいにするとき

        <?php the_permalink(); ?>
        //個別投稿(single.php)にリンクするため

        <?php the_excerpt(); ?>
        //投稿の抜粋(概要)を表示するため

        <?php the_category( '&nbsp;' ); ?>
        //カテゴリーを表示するため -- 教科書ではul liが生成されず、隣り合う要素を半角空白で開ける方法

        <?php the_post_thumbnail(); ?>
        //アイキャッチを表示させるため

5、インクルードファイルの設定
    投稿データのループ以外のパーツを
        header.php
        footer.php
        sidebar.php 
        とする各種ファイルを作成し、各パーツを貼り付ける

    各種ファイルを、index.phpにインクルード（貼り付け）する命令文
        <?php get_header(); ?>
        <?php get_footer(); ?>
        <?php get_sidebar(); ?>

6、サイドバーにウィジェットの設定
    functions.phpに下記例として追記
    (例）
        function custom_widget_register() {
        register_sidebar( array(
            'name'          => 'サイドバーウィジェットエリア',
            'id'            => 'sidebar-widget',
            'description'   => 'ブログページのサイドバーに表示されます。',
            'before_widget' => '<div id="%1$s" class="c-widget %2$s">',
            'after_widget'  => '</div>',
            'before_title'  => '<h2 class="c-widget__title">',
            'after_title'   => '</h2>',
         ) );
        }
        add_action( 'widgets_init', 'custom_widget_register' );

        ＊記述内容は、htmlに書かれる内容で、適宜調整

    index.phpのサイドバーに、下記命令文の設定
    <?php dynamic_sidebar('sidebar-widget'); ?>

    ＊ダッシュボードの外観・ウィジェットから、必要とされるウィジェット機能を適宜追加

7、個別投稿（single.php）の設定
    個別投稿記事にあたる、single.phpを用意、記事内容のhtml領域を下記の命令文で囲む
    (例）
        <?php if ( have_posts() ) : //もし、投稿が1件以上あったら ?>
        <?php while ( have_posts() ) : //投稿の表示条件を満たす間は繰り返す ?>
        <?php the_post(); //データ1件分を取り出して渡す ?>

        //記事内容のhtml領域をここに記述

        <?php endwhile; //投稿ループ終了 ?>
        <!--▼ 前後の投稿リンク : 開始-->
        <?php the_post_navigation(); ?>　
        <!--▲ 前後の投稿リンク : 終了-->
        <?php else: //もし、表示すべき投稿がなかったら ?>
        <p>あてはまる情報はまだありません。</p>
        <?php endif; //条件分岐終了 ?>

    記事内容のhtml領域内に、日付、タイトル、個別の投稿内容を表示させる各種命令文
        <?php the_title(); ?>
        //投稿タイトルを表示するため

        <?php the_time( 'Y年n月j日' ); ?>
        //日付を表示するため
        <?php the_time( 'Y-n-j' ); ?>
        //英語？表記みたいにするとき

        <?php the_content(); ?>
        //投稿の本文を表示するため おもに、single.phpや、page.php等に使用

8、固定ページ（page.php）の設定
    各固定ページあたる、page.phpを用意し、記事内容のhtml領域を下記の命令文で囲む
    (例)
        <?php if ( have_posts() ) : //もし、投稿が1件以上あったら ?>
        <?php while ( have_posts() ) : //投稿の表示条件を満たす間は繰り返す ?>
        <?php the_post(); //データ1件分を取り出して渡す ?>

        //記事内容のhtml領域をここに記述

        <?php endwhile; //投稿ループ終了 ?>
        <?php endif; //条件分岐終了 ?>

    記事内容のhtml領域内に、個別の固定ページの内容を表示させる命令文
        <?php the_content(); ?>

9、カスタムメニューの設定
    functions.phpに記述　=== カスタムメニュー　--> after_setup_theme内に追記
    (例)
        register_nav_menus(
            array(
                'globalnav' => 'グローバルナビゲーション',
                //phpに記述する、'theme_location'  => 'globalnav' と一致させる
            )
        );

   header.phpのメニュー領域のhtmlを消し、下記を追記  
    (例)
        <?php wp_nav_menu(
            array(
                    'theme_location'  => 'globalnav',
                    'container'       => 'div', //ulを囲む要素指定
                    'container_class' => 'c-global-nav',//ulを囲む要素クラス指定
                    'menu_class'       => 'test',   //ulのクラス指定
                )
            );
        ?>





